{"version":3,"sources":["user-app/components/search/ViewSelectedUserWithRouterNavigation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UserRolesDisplay","role","className","name","PrimaryContactForWhichTenantsDisplay","tenant","uniqueName","TenantTeamMembershipsDisplay","tenantTeam","tenantUniqueName","roles","map","ViewSelectedUserWithRouterNavigation","history","useHistory","state","location","userForViewPlusReturnUrl","JSON","parse","returnUrl","user","onClickCloseButton","replace","firstName","aria-label","onClick","lastName","middleName","commonName","gender","homeAddress","phone","office","mobile","home","nationality","zip","landlord","alt","src","id","length","primaryContactForWhichTenants","tenantTeamMemberships","alert","Loading","SearchUsersWithRouterNavigation","loadable","fallback","RoleApp","UserApp","App","baseUrl","aria-expanded","data-target","aria-hidden","activeClassName","to","exact","path","component","render","match","params","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","hydrate","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56aebb96.chunk.js","sourcesContent":["/** This component is for displaying each item in the record, passed to it from UserList */\nimport React from 'react';\nimport { IRole, ITenant, ITenantTeam, IUser } from '../../app.interfaces';\nimport {\n    useHistory, //see https://ultimatecourses.com/blog/programmatically-navigate-react-router\n} from 'react-router-dom';\n\ntype UserRolesDisplayProps = {\n    role: IRole,\n}\n\nconst UserRolesDisplay: React.FC<UserRolesDisplayProps> = ({ role }) => {\n    return (\n        <div className=\"columns\">\n            <div className=\"column\">\n                {role.name}\n            </div>\n        </div>\n    )\n}\n\ntype PrimaryContactForTenantDisplayProps = {\n    tenant: ITenant,\n}\nconst PrimaryContactForWhichTenantsDisplay: React.FC<PrimaryContactForTenantDisplayProps> = ({ tenant }) => {\n\n    return (\n        <div className=\"columns\">\n            <div className=\"column\">\n                {tenant.uniqueName}\n            </div>\n        </div>\n    )\n}\n\ntype TenantTeamMembershipsDisplayProps = {\n    tenantTeam: ITenantTeam, //tenantteam contains roles and name of tenant\n}\n\nconst TenantTeamMembershipsDisplay: React.FC<TenantTeamMembershipsDisplayProps> = ({ tenantTeam }) => {\n    return (\n        <div className=\"columns\">\n            <div className=\"column\">\n                {tenantTeam.tenantUniqueName}\n            </div>\n            <div className=\"column\">\n                <div>Roles:</div>\n                {tenantTeam.roles!.map((role) => {//iterate through roles\n                    return `${role} ` //display the role. TODO: make team membership role removable\n                })}\n            </div>\n        </div>\n\n    )\n}\n\n\nconst ViewSelectedUserWithRouterNavigation: React.FC = () => {\n\n    const history = useHistory();//for goBack use onClickCloseButton\n\n    const state: string = history.location.state as string;\n\n    //alert(state)\n\n    //const userForViewPlusReturnUrl = JSON.parse(localStorage.getItem(\"userForViewPlusReturnUrl\")!)\n    const userForViewPlusReturnUrl = JSON.parse(state)\n    //get the variables out\n    const {returnUrl, ...user} = userForViewPlusReturnUrl;\n    \n    const onClickCloseButton = () => {\n        //simply go back to the returnUrl saved in localStorage\n        history.replace(returnUrl);\n    }\n\n    const onAddToCart = () => {\n        alert('Just kidding! Cannot buy a user. Imagine if this was an eCommerce product')\n    }\n\n    return (\n        <div className=\"modal modal-full-screen modal-fx-fadeInScale is-active\" >\n            <div className=\"modal-background\"></div>\n            <div className=\"modal-content\">\n                <header className=\"modal-card-head\">\n                    <p className=\"modal-card-title\">{`Details of ${user.firstName}`}</p>\n                    <button className=\"delete\" aria-label=\"close\" onClick={onClickCloseButton} />\n                </header>\n                <section className=\"modal-card-body\">\n                    {/*<!-- Content ... -->*/}\n                    <div className=\"columns\">\n                        <div className=\"column is-two-thirds\">\n                            <div className=\"columns\">\n                                <div className=\"column is-two-fifths\">\n                                    First name:\n                                </div>\n                                <div className=\"column\">\n                                    {user.firstName}\n                                </div>\n                            </div>\n                            <div className=\"columns\">\n                                <div className=\"column is-two-fifths\">\n                                    Last name:\n                                </div>\n                                <div className=\"column\">\n                                    {user.lastName}\n                                </div>\n                            </div>\n                            <div className=\"columns\">\n                                <div className=\"column is-two-fifths\">\n                                    Middle name:\n                                </div>\n                                <div className=\"column\">\n                                    {user.middleName}\n                                </div>\n                            </div>\n                            <div className=\"columns\">\n                                <div className=\"column is-two-fifths\">\n                                    Common name:\n                                </div>\n                                <div className=\"column\">\n                                    {user.commonName}\n                                </div>\n                            </div>\n                            <div className=\"columns\">\n                                <div className=\"column is-two-fifths\">\n                                    Gender:\n                                </div>\n                                <div className=\"column\">\n                                    {user.gender}\n                                </div>\n                            </div>\n                            <div className=\"columns\">\n                                <div className=\"column is-two-fifths\">\n                                    Home address:\n                                </div>\n                                <div className=\"column\">\n                                    {user.homeAddress}\n                                </div>\n                            </div>\n                            <div className=\"columns\">\n                                <div className=\"column is-two-fifths\">\n                                    Phone numbers:\n                                </div>\n                                <div className=\"column\">\n                                    <div className=\"columns\">\n                                        <div className=\"column\">\n                                            Office:\n                                        </div>\n                                        <div className=\"column\">\n                                            {user.phone?user.phone!.office![0]: ''}\n                                        </div>\n                                        <div className=\"column\">\n                                            {user.phone?user.phone!.office![1]: ''}\n                                        </div>\n                                    </div>\n                                    <div className=\"columns\">\n                                        <div className=\"column\">\n                                            Mobile:\n                                        </div>\n                                        <div className=\"column\">\n                                            {user.phone?user.phone!.mobile![0]:''}\n                                        </div>\n                                        <div className=\"column\">\n                                            {user.phone?user.phone!.mobile![1]:''}\n                                        </div>\n                                    </div>\n                                    <div className=\"columns\">\n                                        <div className=\"column\">\n                                            Home:\n                                        </div>\n                                        <div className=\"column\">\n                                            {user.phone?user.phone!.home![0]:''}\n                                        </div>\n                                        <div className=\"column\">\n                                            {user.phone?user.phone!.home![1]:''}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"columns\">\n                                <div className=\"column is-two-fifths\">\n                                    Nationality:\n                                </div>\n                                <div className=\"column\">\n                                    {user.nationality}\n                                </div>\n                            </div>\n                            <div className=\"columns\">\n                                <div className=\"column is-two-fifths\">\n                                    State:\n                                </div>\n                                <div className=\"column\">\n                                    {user.state}\n                                </div>\n                            </div>\n                            <div className=\"columns\">\n                                <div className=\"column is-two-fifths\">\n                                    Zip:\n                                </div>\n                                <div className=\"column\">\n                                    {user.zip}\n                                </div>\n                            </div>\n                            <div className=\"columns\">\n                                <div className=\"column is-two-fifths\">\n                                    Landlord user?:\n                                </div>\n                                <div className=\"column\">\n                                    {user.landlord ? 'Yes' : 'No'}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"column\">\n                            <div className=\"columns\">\n                                <div className=\"column\">\n                                    <div className=\"box\">\n                                        <h5>Photo</h5>\n                                        <div className=\"columns\">\n                                            <div className=\"column\">\n                                                <img alt=\"user\" src={`/v1/users/${user.id}/photo`} />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"columns\">\n                                <div className=\"column\">\n                                    <div className=\"box\">\n                                        <h5>Assigned Roles</h5>\n                                        <div className=\"columns\">\n                                            <div className=\"column\">\n                                                <div className=\"field\">\n                                                    {user.roles! && user.roles!.length > 0 ?\n                                                        user.roles!.map((role: IRole) => { return <UserRolesDisplay role={role} /> }) :\n                                                        <div>No roles assigned to user yet</div>}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {!user.landlord &&\n                                <div className=\"columns\">\n                                    <div className=\"column\">\n                                        <div className=\"box\">\n                                            <h5 className=\"label\">Primary contact for</h5>\n                                            <div className=\"columns\">\n                                                <div className=\"column\">\n                                                    <div className=\"field\">\n                                                        {user.primaryContactForWhichTenants! && user.primaryContactForWhichTenants!.length > 0 ?\n                                                            user.primaryContactForWhichTenants!.map((tenant: ITenant) => { return <PrimaryContactForWhichTenantsDisplay tenant={tenant} /> }) :\n                                                            <div>Not a primary contact for any tenant</div>}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                            {!user.landlord &&\n                                <div className=\"columns\">\n                                    <div className=\"column\">\n                                        <div className=\"box\">\n                                            <h5>Tenant Team Membership for</h5>\n                                            <div className=\"columns\">\n                                                <div className=\"column\">\n                                                    <div className=\"field\">\n                                                        {user.tenantTeamMemberships! && user.tenantTeamMemberships!.length > 0 ?\n                                                            user.tenantTeamMemberships!.map((tenantTeam: ITenantTeam) => { return <TenantTeamMembershipsDisplay tenantTeam={tenantTeam} /> }) :\n                                                            <div>Not a team member of any tenant</div>}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                    </div>\n\n                </section>\n                <footer className=\"modal-card-foot\">\n                    <div className=\"buttons\">\n                        <button className=\"button is-success\" onClick={onAddToCart}>Add to Cart</button>\n                        <button className=\"button is-warning\" onClick={onClickCloseButton}>Close</button>\n                    </div>\n                </footer>\n            </div>\n        </div>\n    );\n}\n\nexport default ViewSelectedUserWithRouterNavigation;\n","import React from 'react';\n//Below requires npm install @loadable/component @types/loadable__component. See https://reactrouter.com/web/guides/code-splitting\nimport loadable from \"@loadable/component\";\n\nimport {\n  Route,\n  Switch,\n  NavLink\n} from 'react-router-dom';\n\n//import SearchUsers from './user-app/components/search/SearchUsers' //this option does not use react-router subroutes\n//import SearchUsersWithRouterNavigation from './user-app/components/search/SearchUsersWithRouterNavigation';\nimport ViewSelectedUserWithRouterNavigation from './user-app/components/search/ViewSelectedUserWithRouterNavigation';\n//import RoleApp from './components/role/Role'; //replaced with loadable component below\n//import UserApp from './user-app/UserApp'; //replaced with loadable component below\n\n/* Below, we use reloadable to dynamically load RoleApp and UserApp components, when the route to them is clicked. \nReloadable ensures that the javascript build is split for optimal load speed. a.k.a code splitting \nFirst created a component that shows loading message */\n/**\n * Below is a component that simply shows loading button without text or borders\n */\nconst Loading: React.FC = () => {\n  return (\n    <div>\n      <button className=\"button is-text is-loading\">   </button>\n    </div>\n  )\n}\n\n//I am making SearchUsersWithRouterNavigation reloadable because renderToNodeStream on server side will fail with the use of localStorage\nconst SearchUsersWithRouterNavigation = loadable(() => import(\"./user-app/components/search/SearchUsersWithRouterNavigation\"), {\n  fallback: <Loading />\n});\n\nconst RoleApp = loadable(() => import(\"./role-app/RoleApp\"), {\n  fallback: <Loading />\n});\n\nconst UserApp = loadable(() => import('./user-app/UserApp'), {\n  fallback: <Loading />\n})\n\n\ntype Props = {\n  baseUrl: string\n}\n\nconst App: React.FC<Props> = ({ baseUrl }) => {\n  return (\n    <div>\n      <div className=\"navbar is-transparent\" role=\"navigation\" aria-label=\"main navigation\">\n        {/*navbar-brand is for the logo and hamburger menu for narrow screens*/}\n        <div className=\"container \">\n          {/*This makes the navigator left and right align with other containers in the page*/}\n          <div className=\"navbar-brand\">\n            {/*Notice the data-target below in the hamburger menu. Set is-active when on mobile*/}\n            {// eslint-disable-next-line\n              <a role=\"button\" className=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\"\n                data-target=\"userClientAppMenu\">\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n              </a>}\n          </div>\n          {/*Notice the id=\"bookExampleMenu\" here. This makes this div's menuitems the data-target for the navbar-burger above*/}\n          <div id=\"userClientAppMenu\" className=\"navbar-menu\">\n            {/*navbar-start below is for a set of menu items that are left oriented */}\n            <div className=\"navbar-start\">\n              <NavLink activeClassName='is-active' to={`${baseUrl}/`} >\n                {// eslint-disable-next-line\n                  <a className=\"navbar-item\">\n                    Search Users</a>\n                }\n              </NavLink>\n              <NavLink activeClassName='is-active' to={`${baseUrl}/user-admin`} >\n                {// eslint-disable-next-line\n                  <a className=\"navbar-item\">\n                    User Admin</a>\n                }\n              </NavLink>\n              <NavLink activeClassName='is-active' to={`${baseUrl}/role-admin`} >\n                {// eslint-disable-next-line\n                  <a className=\"navbar-item\">\n                    Role Admin</a>\n                }\n              </NavLink>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Switch>\n        {/** Below is for routing to search client demo */}\n        <Route exact path={`${baseUrl}`} component={SearchUsersWithRouterNavigation} />\n        {/** Below is for routing to view selected user to be called with history.push in SearchUsersWithRouterNavigation*/}\n        <Route exact path={`${baseUrl}/view-selected`} component={ViewSelectedUserWithRouterNavigation} />\n\n        <Route exact path={`${baseUrl}/user-admin`} component={UserApp} />\n        {/** Below is for routing to role admin */}\n        <Route exact path={`${baseUrl}/role-admin`} component={RoleApp} />\n\n        {/** Below is for routing URL that matches the path patter /hello/:variable */}\n        <Route path={`${baseUrl}/hello/:name`} render={({ match }) => {\n          return (\n            <h3>Hello {match.params.name}</h3>\n          );\n        }}\n        />\n        {/**Route below is not associated with any path. This means that this route will be invoked\n             * whenever any URL path entered is not found\n             */}\n        <Route render={() => {\n          return (\n            <h3>Page not found</h3>\n          );\n        }}\n        />\n      </Switch>\n    </div>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\n\nReactDOM.hydrate(\n  <Router>\n    <React.StrictMode>\n      <App baseUrl=\"/v1/users/web\" />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}